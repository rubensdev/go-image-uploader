package templates

import (
	"rubensdev.com/go-image-processing/templates/components"
	"rubensdev.com/go-image-processing/templates/vite"
)

script globalConfig(vd ViewData) {
	document.addEventListener('alpine:init', () => {
		Object.assign(window.globalConfig, window.globalConfig, {
			allowedMimetypes: vd.Meta["allowed_mimetypes"],
			maxFileSize: vd.Meta["max_file_size"],
			uploadEndpoint: vd.Meta["upload_endpoint"],
			uploadStatuses: vd.Meta["upload_statuses"],
		});
		Object.assign(window.i18n, window.i18n, {
			cannot_load_img: 'Could not load image',
			upload_status: {
				cancelled: 'Upload cancelled',
				error: 'An error has occurred',
				file_size_exceeded: 'File size exceeded',
				success: 'Upload successfully',
				uploading: 'Uploading',
				unsupported: 'Unsupported format',
			}
		})
	})
}

templ Home(vd ViewData) {
	{{
		vm := ctx.Value(ViteManagerCtx).(*vite.Manager)
	}}
	@RootLayout(vd.Title, vd.Lang) {
		@globalConfig(vd)
		<header class="header">
			<h1 class="title">Image Upload</h1>
		</header>
		<div class="wrapper" x-data="UploadForm()">
			<div class="box upload_box" action="#">
				<div class="drag_n_drop_box" @drop.prevent="onDrop" @dragover.prevent>
					<img src={ vm.GetAsset("src/svg/upload.svg") } style="width: 32px;"/>
					Drag and Drop
				</div>
				<p>
					or
				</p>
				<form id="form" action="#" style="margin-bottom: 0.5rem; width: 100%;">
					<input class="file_input" type="file" name="images[]" hidden multiple @click.stop/>
					<button class="btn" type="button">
						Browse
					</button>
				</form>
				<span class="mfs_msg">
					Max. File. Size { vd.Meta["max_file_size"].(string) }MB
				</span>
			</div>
			<ul class="upload_list">
				<template x-for="item in items" :key="item.id">
					@components.UploadItem(vm)
				</template>
			</ul>
		</div>
	}
}
